# Common makefile for inclusion
#

NODE_BIN=./node_modules/.bin
BUILDDIR=cordova

WEBPACK=$(NODE_BIN)/webpack
WEBPACK_MODE:=production
BABELNODE=$(NODE_BIN)/babel-node
HTMLPDF=$(NODE_BIN)/html-pdf
CORDOVA=$(NODE_BIN)/cordova
MAKE_CONFIG=$(NODE_BIN)/hesperian-cordova-makeconfig
MAKE_WEBINDEX=$(NODE_BIN)/hesperian-web-makeindex
CORDOVA_CONFIG=$(BUILDDIR)/config.xml
VERSION := $(shell node -p "require('./app-config.json').version")
OUTPUT_DIR=output/${VERSION}
WEBAPP_DIR=./dist-web


.PHONY: build clean webpack watch dist help

help:
	@echo "Common make targets:"
	@echo "\tmake watch\t webpack watch build in the dist directory"
	@echo "\tmake build\t full cordova release build created in ./output"


dist: webpack $(CORDOVA_CONFIG)
	rm -rf ${BUILDDIR}/www
	cp -R dist ${BUILDDIR}/www

build: dist
	@(cd ${BUILDDIR}; cordova build --device --release -- --password="${CORDOVA_SIGNING_PASSPHRASE}" --storePassword="${CORDOVA_SIGNING_PASSPHRASE}")
	mkdir -p ${OUTPUT_DIR}
	cp ${BUILDDIR}/platforms/ios/build/device/*.ipa ${OUTPUT_DIR}
	cp ${BUILDDIR}/platforms/android/app/build/outputs/apk/*/*.apk ${OUTPUT_DIR}

.PHONY: site
site: dist
	rm -rf ${WEBAPP_DIR}
	cp -R dist ${WEBAPP_DIR}
	${MAKE_WEBINDEX} ./app-config.json ${WEBAPP_DIR}/index.html
	mkdir -p ${OUTPUT_DIR}
	(cd ${WEBAPP_DIR}; zip -r ../${OUTPUT_DIR}/app-${VERSION}.zip .)

$(CORDOVA_CONFIG): app-config.json ${MAKE_CONFIG}
	(cd ${BUILDDIR}; rm -rf resources-tmp; ../${MAKE_CONFIG} ../app-config.json)

# Make sure emulator is running to pick up correct device
# Android Studio -> Tools -> AVD's
.PHONY: emulate-android
emulate-android: dist
	@(cd ${BUILDDIR}; cordova emulate android --device --release -- --password="${CORDOVA_SIGNING_PASSPHRASE}" --storePassword="${CORDOVA_SIGNING_PASSPHRASE}")

clean:
	rm -rf ${BUILDDIR}/platforms/ios/build/
	(cd ${BUILDDIR}; cordova clean)

distclean:
	rm -rf ${BUILDDIR}/platforms/
	rm -rf ${BUILDDIR}/node_modules package-lock.json
	rm -rf ${BUILDDIR}/www ${BUILDDIR}/platforms ${BUILDDIR}/plugins

install:
	npm install
	
cordova-install: $(CORDOVA_CONFIG) webpack
	(cd ${BUILDDIR}; npm ci)
	rm -rf ${BUILDDIR}/www
	cp -R dist ${BUILDDIR}/www
	rm -rf ${BUILDDIR}/platforms
	rm -rf ${BUILDDIR}/plugins
	(cd ${BUILDDIR}; cordova prepare)


webpack:
	rm -rf dist
	$(WEBPACK) --mode=${WEBPACK_MODE}
watch:
	$(WEBPACK) --watch
